package com.wangcai.lottery.game;

import android.app.Activity;
import android.text.TextUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Toast;

import com.wangcai.lottery.R;
import com.wangcai.lottery.data.Lottery;
import com.wangcai.lottery.data.Method;
import com.wangcai.lottery.pattern.PickNumber;
import com.google.gson.JsonArray;

import java.util.ArrayList;
import java.util.Random;

/**
 * 时时彩，一般性玩法均在这个类
 * Created by Alashi on 2016/2/17.
 */
public class SscCommonGame extends Game {

    private static final String TAG = SscCommonGame.class.getSimpleName();
    private static boolean digitalType = false;
    private static int seat = 0;

    public SscCommonGame(Activity activity, Method method, Lottery lottery) {
        super(activity, method, lottery);
    }

    @Override
    public void onInflate() {
        try {
            java.lang.reflect.Method function = getClass().getMethod(method.getNameEn() + method.getId(), Game.class);
            function.invoke(null, this);
        } catch (Exception e) {
            e.printStackTrace();
            Log.i(TAG, "onInflate: " + "//"
                    + method.getNameCn() + " " + method.getNameEn() + method.getId()
                    + " public static void " + method.getNameEn() + method.getId()
                    + "(Game game) {}");
            Toast.makeText(topLayout.getContext(), "不支持的类型", Toast.LENGTH_LONG).show();
        }
    }

    public String getWebViewCode() {
        JsonArray jsonArray = new JsonArray();
        for (PickNumber pickNumber : pickNumbers) {
            jsonArray.add(transform(pickNumber.getCheckedNumber(), pickNumber.getNumberCount(), true));
        }
        return jsonArray.toString();
    }

    public String getSubmitCodes() {
        StringBuilder builder = new StringBuilder();
        StringBuffer posts=new StringBuffer();
        for (int i = 0, size = pickNumbers.size(); i < size; i++) {
            ArrayList<Integer> pick = pickNumbers.get(i).getCheckedNumber();
            if(pick.size()>0){
                posts.append(i);
            }
            builder.append(transform(pick, true, true));
            if (i != size - 1) {
                builder.append("|");
            }
        }
        if (digitalType) {
            setSeat(String.valueOf(seat));
            setPostsiton(posts.toString());
        }
        return builder.toString();
    }

    public void onRandomCodes() {
        try {
            java.lang.reflect.Method function = getClass().getMethod(method.getNameEn() + method.getId() + "Random", Game.class);
            function.invoke(null, this);
        } catch (Exception e) {
            e.printStackTrace();
            Log.i(TAG, "onInflate: " + "//"
                    + method.getNameCn() + " " + method.getNameEn() + method.getId() + "Random"
                    + " public static void " + method.getNameEn() + method.getId() + "Random"
                    + "(Game game) {}");
            Toast.makeText(topLayout.getContext(), "不支持的类型", Toast.LENGTH_LONG).show();
        }
    }

    private static void addPickNumber2Game(Game game, View topView, String title, boolean controlStyle) {
        PickNumber pickNumber2 = new PickNumber(topView, title);
        if (controlStyle) {
            pickNumber2.getNumberGroupView().setChooseMode(controlStyle);
            pickNumber2.setControlBarHide(controlStyle);
        }
        game.addPickNumber(pickNumber2);
    }


    public static View createDefaultPickLayout(ViewGroup container) {
        return LayoutInflater.from(container.getContext()).inflate(R.layout.pick_column, null, false);
    }

    private static void createPicklayoutStyle(Game game, String[] name) {
        createPicklayout(game, name, false);
    }

    private static void createPicklayoutStyle(Game game, String[] name, boolean style) {
        createPicklayout(game, name, style);
    }

    private static void createPicklayout(Game game, String[] name, boolean style) {
        View[] views = new View[name.length];
        for (int i = 0; i < name.length; i++) {
            View view = createDefaultPickLayout(game.getTopLayout());
            addPickNumber2Game(game, view, name[i], style);
            views[i] = view;
        }

        ViewGroup topLayout = game.getTopLayout();
        for (View view : views) {
            topLayout.addView(view);
        }
    }

    //直选复式 fushi
    public static void fushi68(Game game) {
        createPicklayoutStyle(game, new String[]{"万位", "千位", "百位", "十位", "个位"});
    }

    //组选120 zuxuan12032
    public static void zuxuan12032(Game game) {
        createPicklayoutStyle(game, new String[]{"组选120"});
    }

    //组选60 zuxuan6031
    public static void zuxuan6031(Game game) {
        createPicklayoutStyle(game, new String[]{"二重号", "单号"});
    }

    //组选30 zuxuan3030
    public static void zuxuan3030(Game game) {
        createPicklayoutStyle(game, new String[]{"二重号", "单号"});
    }

    //组选20 zuxuan2029
    public static void zuxuan2029(Game game) {
        createPicklayoutStyle(game, new String[]{"三重号", "单号"});
    }

    //组选10 zuxuan1028
    public static void zuxuan1028(Game game) {
        createPicklayoutStyle(game, new String[]{"三重号", "二重号"});
    }

    //组选5 zuxuan527
    public static void zuxuan527(Game game) {
        createPicklayoutStyle(game, new String[]{"四重号", "单号"});
    }

    //直选复式 fushi295
    public static void fushi295(Game game) {
        createPicklayoutStyle(game, new String[]{"万位", "千位", "百位", "十位"});
    }

    //组选24 zuxuan24242
    public static void zuxuan24242(Game game) {
        createPicklayoutStyle(game, new String[]{"组选24"});
    }

    //组选12 zuxuan12329
    public static void zuxuan12329(Game game) {
        createPicklayoutStyle(game, new String[]{"二重号", "单号"});
    }

    //组选6 zuxuan6243
    public static void zuxuan6243(Game game) {
        createPicklayoutStyle(game, new String[]{"组选6"});
    }

    //组选4 zuxuan4330
    public static void zuxuan4330(Game game) {
        createPicklayoutStyle(game, new String[]{"三重号", "单号"});
    }

    //直选复式 fushi67
    public static void fushi67(Game game) {
        createPicklayoutStyle(game, new String[]{"千位", "百位", "十位", "个位"});
    }

    //组选24 zuxuan2426
    public static void zuxuan2426(Game game) {
        createPicklayoutStyle(game, new String[]{"组选24"});
    }

    //组选12 zuxuan1225
    public static void zuxuan1225(Game game) {
        createPicklayoutStyle(game, new String[]{"二重号", "单号"});
    }

    //组选6 zuxuan624
    public static void zuxuan624(Game game) {
        createPicklayoutStyle(game, new String[]{"组选6"});
    }

    //组选4 zuxuan423
    public static void zuxuan423(Game game) {
        createPicklayoutStyle(game, new String[]{"三重号", "单号"});
    }

    //直选复式 fushi65
    public static void fushi65(Game game) {
        createPicklayoutStyle(game, new String[]{"万位", "千位", "百位"});
    }

    //直选跨度 kuadu60
    public static void kuadu60(Game game) {
        createPicklayoutStyle(game, new String[]{"直选跨度"});
    }

    //组三 zusan16
    public static void zusan16(Game game) {
        createPicklayoutStyle(game, new String[]{"组三"});
    }

    //组六 zuliu17
    public static void zuliu17(Game game) {
        createPicklayoutStyle(game, new String[]{"组六"});
    }

    //包胆 baodan64  //    前三包胆 baodan  64
    public static void baodan64(Game game) {
        createPicklayoutStyle(game, new String[]{"包胆"}, true);
    }

    //和值尾数 hezhiweishu33
    public static void hezhiweishu33(Game game) {
        createPicklayoutStyle(game, new String[]{"和值尾数"});
    }

    //直选复式 fushi150
    public static void fushi150(Game game) {
        createPicklayoutStyle(game, new String[]{"千位", "百位", "十位"});
    }

    //直选跨度 kuadu149
    public static void kuadu149(Game game) {
        createPicklayoutStyle(game, new String[]{"直选跨度"});
    }

    //组三 zusan145
    public static void zusan145(Game game) {
        createPicklayoutStyle(game, new String[]{"组三"});
    }

    //组六 zuliu146
    public static void zuliu146(Game game) {
        createPicklayoutStyle(game, new String[]{"组六"});
    }

    //包胆 baodan153    //包胆中三  baodan  153
    public static void baodan153(Game game) {
        createPicklayoutStyle(game, new String[]{"包胆"}, true);
    }

    //和值尾数 hezhiweishu156
    public static void hezhiweishu156(Game game) {
        createPicklayoutStyle(game, new String[]{"和值尾数"});
    }

    //直选复式 fushi69
    public static void fushi69(Game game) {
        createPicklayoutStyle(game, new String[]{"百位", "十位", "个位"});
    }

    //直选跨度 kuadu62
    public static void kuadu62(Game game) {
        createPicklayoutStyle(game, new String[]{"直选跨度"});
    }

    //组三 zusan49
    public static void zusan49(Game game) {
        createPicklayoutStyle(game, new String[]{"组三"});
    }

    //组六 zuliu50
    public static void zuliu50(Game game) {
        createPicklayoutStyle(game, new String[]{"组六"});
    }

    //包胆 baodan83  后三
    public static void baodan83(Game game) {
        createPicklayoutStyle(game, new String[]{"包胆"}, true);
    }

    //和值尾数 hezhiweishu54
    public static void hezhiweishu54(Game game) {
        createPicklayoutStyle(game, new String[]{"和值尾数"});
    }


    //后二复式 houerfushi70
    public static void houerfushi70(Game game) {
        createPicklayoutStyle(game, new String[]{"十位", "个位"});
    }

    //后二跨度 houerkuadu63
    public static void houerkuadu63(Game game) {
        createPicklayoutStyle(game, new String[]{"后二跨度"});
    }

    //前二复式 qianerfushi66
    public static void qianerfushi66(Game game) {
        createPicklayoutStyle(game, new String[]{"万位", "千位"});
    }

    //前二跨度 qianerkuadu61
    public static void qianerkuadu61(Game game) {
        createPicklayoutStyle(game, new String[]{"前二跨度"});
    }

    //后二复式 houerfushi59
    public static void houerfushi59(Game game) {
        createPicklayoutStyle(game, new String[]{"后二组选"});
    }

    //后二包胆 houerbaodan85
    public static void houerbaodan85(Game game) {
        createPicklayoutStyle(game, new String[]{"后二包胆"}, true);
    }

    //前二复式 qianerfushi20
    public static void qianerfushi20(Game game) {
        createPicklayoutStyle(game, new String[]{"前二组选"});
    }

    //前二包胆 qianerbaodan84
    public static void qianerbaodan84(Game game) {
        createPicklayoutStyle(game, new String[]{"前二包胆"}, true);
    }

    //定位胆 fushi78
    public static void fushi78(Game game) {
        createPicklayoutStyle(game, new String[]{"万位", "千位", "百位", "十位", "个位"});
    }

    //后三一码不定位 housanyimabudingwei51
    public static void housanyimabudingwei51(Game game) {
        createPicklayoutStyle(game, new String[]{"后三一码不定位"});
    }

    //后三二码不定位 housanermabudingwei52
    public static void housanermabudingwei52(Game game) {
        createPicklayoutStyle(game, new String[]{"后三二码不定位"});
    }

    //前三一码不定位 qiansanyimabudingwei18
    public static void qiansanyimabudingwei18(Game game) {
        createPicklayoutStyle(game, new String[]{"前三一码不定位"});
    }

    //前三二码不定位 qiansanermabudingwei21
    public static void qiansanermabudingwei21(Game game) {
        createPicklayoutStyle(game, new String[]{"前三二码不定位"});
    }

    //四星一码不定位 sixingyimabudingwei34
    public static void sixingyimabudingwei34(Game game) {
        createPicklayoutStyle(game, new String[]{"四星一码不定位"});
    }

    //四星二码不定位 sixingermabudingwei35
    public static void sixingermabudingwei35(Game game) {
        createPicklayoutStyle(game, new String[]{"四星二码不定位"});
    }

    //五星二码不定位 wuxingermabudingwei36
    public static void wuxingermabudingwei36(Game game) {
        createPicklayoutStyle(game, new String[]{"五星二码不定位"});
    }

    //五星三码不定位 wuxingsanmabudingwei37
    public static void wuxingsanmabudingwei37(Game game) {
        createPicklayoutStyle(game, new String[]{"五星三码不定位"});
    }

    //一帆风顺 yifanfengshun44
    public static void yifanfengshun44(Game game) {
        createPicklayoutStyle(game, new String[]{"一帆风顺"});
    }

    //好事成双 haoshichengshuang45
    public static void haoshichengshuang45(Game game) {
        createPicklayoutStyle(game, new String[]{"好事成双"});
    }

    //三星报喜 sanxingbaoxi46
    public static void sanxingbaoxi46(Game game) {
        createPicklayoutStyle(game, new String[]{"三星报喜"});
    }

    //四季发财 sijifacai47
    public static void sijifacai47(Game game) {
        createPicklayoutStyle(game, new String[]{"四季发财"});
    }

    //任选二直选复式 zhixuanfushi199
    public static void zhixuanfushi199(Game game) {
        createPicklayoutStyle(game, new String[]{"万位", "千位", "百位", "十位", "个位"});
        digitalType = true;
        seat = 2;
    }

    //任选三直选复式 zhixuanfushi179
    public static void zhixuanfushi179(Game game) {
        createPicklayoutStyle(game, new String[]{"万位", "千位", "百位", "十位", "个位"});
        digitalType = true;
        seat = 3;
    }

    //任选四直选复式 fushi180
    public static void fushi180(Game game) {
        createPicklayoutStyle(game, new String[]{"万位", "千位", "百位", "十位", "个位"});
        digitalType = true;
        seat = 4;
    }

    //猜1不出 cbc1362
    public static void cbc1362(Game game) {
        createPicklayoutStyle(game, new String[]{"一个号"});
    }

    //猜2不出 cbc2363
    public static void cbc2363(Game game) {
        createPicklayoutStyle(game, new String[]{"二个号"});
    }

    //猜3不出 cbc3364
    public static void cbc3364(Game game) {
        createPicklayoutStyle(game, new String[]{"三个号"});
    }

    //猜4不出 cbc4365
    public static void cbc4365(Game game) {
        createPicklayoutStyle(game, new String[]{"四个号"});
    }

    //猜5不出 cbc5366
    public static void cbc5366(Game game) {
        createPicklayoutStyle(game, new String[]{"五个号"});
    }

    /*==========================================随机===================================================*/
    public static void YardsRandom(Game game, int yards) {
        for (PickNumber pickNumber : game.pickNumbers)
            pickNumber.onRandom(random(0, 9, yards));
        game.notifyListener();
    }

    public static void YardsRandom(Game game, int yards, int single) {
        ArrayList<Integer> randomList = new ArrayList<>();
        for (int i = 0, size = game.pickNumbers.size(); i < size; i++) {
            PickNumber pickNumber = game.pickNumbers.get(i);
            if (i == 0) {
                randomList = random(0, 9, yards);
                pickNumber.onRandom(randomList);
            } else
                pickNumber.onRandom(randomCommon(0, 9, single, randomList));
        }
        game.notifyListener();
    }

    /**
     * 五星
     **/
    //直选复式 fushi68Random
    public static void fushi68Random(Game game) {
        YardsRandom(game, 1);
    }

    //组选120 zuxuan12032Random
    public static void zuxuan12032Random(Game game) {
        YardsRandom(game, 5);
    }

    //组选60 zuxuan6031Random
    public static void zuxuan6031Random(Game game) {
        YardsRandom(game, 1, 3);
    }

    //组选30 zuxuan3030Random
    public static void zuxuan3030Random(Game game) {
        YardsRandom(game, 2, 1);
    }

    //组选20 zuxuan2029Random
    public static void zuxuan2029Random(Game game) {
        YardsRandom(game, 1, 2);
    }

    //组选10 zuxuan1028Random
    public static void zuxuan1028Random(Game game) {
        YardsRandom(game, 1, 1);
    }

    //组选5 zuxuan527Random
    public static void zuxuan527Random(Game game) {
        YardsRandom(game, 1, 1);
    }

    /**
     * 前四星
     **/
    //直选复式 fushi295Random
    public static void fushi295Random(Game game) {
        YardsRandom(game, 1);
    }

    //组选24 zuxuan24242Random
    public static void zuxuan24242Random(Game game) {
        YardsRandom(game, 4);
    }

    //组选12 zuxuan12329Random
    public static void zuxuan12329Random(Game game) {
        YardsRandom(game, 1, 2);
    }

    //组选6 zuxuan6243Random
    public static void zuxuan6243Random(Game game) {
        YardsRandom(game, 2);
    }

    //组选4 zuxuan4330Random
    public static void zuxuan4330Random(Game game) {
        YardsRandom(game, 1, 1);
    }

    /**
     * 后四星
     **/
    //直选复式 fushi67Random
    public static void fushi67Random(Game game) {
        YardsRandom(game, 1);
    }

    //组选24 zuxuan2426Random
    public static void zuxuan2426Random(Game game) {
        YardsRandom(game, 4);
    }

    //组选12 zuxuan1225Random
    public static void zuxuan1225Random(Game game) {
        YardsRandom(game, 1, 2);
    }

    //组选6 zuxuan624Random
    public static void zuxuan624Random(Game game) {
        YardsRandom(game, 2);
    }

    //组选4 zuxuan423Random
    public static void zuxuan423Random(Game game) {
        YardsRandom(game, 1, 1);
    }

    /**
     * 前三星
     **/
    //直选复式 fushi65Random
    public static void fushi65Random(Game game) {
        YardsRandom(game, 1);
    }

    //直选跨度 kuadu60Random
    public static void kuadu60Random(Game game) {
        YardsRandom(game, 1);
    }

    //组三 zusan16Random
    public static void zusan16Random(Game game) {
        YardsRandom(game, 2);
    }

    //组六 zuliu17Random
    public static void zuliu17Random(Game game) {
        YardsRandom(game, 3);
    }


    //包胆 baodan64Random
    public static void baodan64Random(Game game) {
        YardsRandom(game, 1);
    }

    //和值尾数 hezhiweishu33Random
    public static void hezhiweishu33Random(Game game) {
        YardsRandom(game, 1);
    }


    /**
     * 中三星
     **/
    //直选复式 fushi150Random
    public static void fushi150Random(Game game) {
        YardsRandom(game, 1);
    }

    //直选跨度 kuadu149Random
    public static void kuadu149Random(Game game) {
        YardsRandom(game, 1);
    }

    //组三 zusan145Random
    public static void zusan145Random(Game game) {
        YardsRandom(game, 2);
    }

    //组六 zuliu146Random
    public static void zuliu146Random(Game game) {
        YardsRandom(game, 3);
    }

    //包胆 baodan153Random
    public static void baodan153Random(Game game) {
        YardsRandom(game, 1);
    }

    //和值尾数 hezhiweishu156Random
    public static void hezhiweishu156Random(Game game) {
        YardsRandom(game, 1);
    }


    /**
     * 后三星
     **/
    //直选复式 fushi69Random
    public static void fushi69Random(Game game) {
        YardsRandom(game, 1);
    }

    //直选跨度 kuadu62Random
    public static void kuadu62Random(Game game) {
        YardsRandom(game, 1);
    }

    //组三 zusan49Random
    public static void zusan49Random(Game game) {
        YardsRandom(game, 2);
    }

    //组六 zuliu50Random
    public static void zuliu50Random(Game game) {
        YardsRandom(game, 3);
    }

    //包胆 baodan83Random
    public static void baodan83Random(Game game) {
        YardsRandom(game, 1);
    }

    //和值尾数 hezhiweishu54Random
    public static void hezhiweishu54Random(Game game) {
        YardsRandom(game, 1);
    }


    /**
     * 二星　后二
     **/
    //后二复式 houerfushi70Random
    public static void houerfushi70Random(Game game) {
        YardsRandom(game, 1);
    }

    //后二跨度 houerkuadu63Random
    public static void houerkuadu63Random(Game game) {
        YardsRandom(game, 1);
    }

    /**
     * 二星　前二
     **/
    //前二复式 qianerfushi66Random
    public static void qianerfushi66Random(Game game) {
        YardsRandom(game, 1);
    }

    //前二跨度 qianerkuadu61Random
    public static void qianerkuadu61Random(Game game) {
        YardsRandom(game, 1);
    }

    /**
     * 二星　后二组选
     **/
    //后二组选复式 houerfushi59Random
    public static void houerfushi59Random(Game game) {
        YardsRandom(game, 2);
    }

    //后二包胆 houerbaodan85Random
    public static void houerbaodan85Random(Game game) {
        YardsRandom(game, 1);
    }

    /**
     * 二星　前二组选
     **/
    //前二组选复式 qianerfushi20Random
    public static void qianerfushi20Random(Game game) {
        YardsRandom(game, 2);
    }

    //前二包胆 qianerbaodan84Random
    public static void qianerbaodan84Random(Game game) {
        YardsRandom(game, 1);
    }

    /**
     * 定位胆
     **/
    //定位胆 fushi78Random
    public static void fushi78Random(Game game) {
        for (PickNumber pickNumber : game.pickNumbers)
            pickNumber.onRandom(new ArrayList<>());
        game.notifyListener();
        PickNumber pickNumber = game.pickNumbers.get(new Random().nextInt(game.pickNumbers.size()));
        pickNumber.onRandom(random(0, 9, 1));
        game.notifyListener();
    }

    /**
     * 不定位
     **/
    //后三一码不定位 housanyimabudingwei51Random
    public static void housanyimabudingwei51Random(Game game) {
        YardsRandom(game, 1);
    }

    //后三二码不定位 housanermabudingwei52Random
    public static void housanermabudingwei52Random(Game game) {
        YardsRandom(game, 2);
    }

    //前三一码不定位 qiansanyimabudingwei18Random
    public static void qiansanyimabudingwei18Random(Game game) {
        YardsRandom(game, 1);
    }

    //前三二码不定位 qiansanermabudingwei21Random
    public static void qiansanermabudingwei21Random(Game game) {
        YardsRandom(game, 2);
    }

    //四星一码不定位 sixingyimabudingwei34Random
    public static void sixingyimabudingwei34Random(Game game) {
        YardsRandom(game, 1);
    }

    //四星二码不定位 sixingermabudingwei35Random
    public static void sixingermabudingwei35Random(Game game) {
        YardsRandom(game, 2);
    }

    //五星二码不定位 wuxingermabudingwei36Random
    public static void wuxingermabudingwei36Random(Game game) {
        YardsRandom(game, 2);
    }

    //五星三码不定位 wuxingsanmabudingwei37Random
    public static void wuxingsanmabudingwei37Random(Game game) {
        YardsRandom(game, 3);
    }

    /**
     * 趣味
     **/
    //一帆风顺 yifanfengshun44Random
    public static void yifanfengshun44Random(Game game) {
        YardsRandom(game, 1);
    }

    //好事成双 haoshichengshuang45Random
    public static void haoshichengshuang45Random(Game game) {
        YardsRandom(game, 1);
    }

    //三星报喜 sanxingbaoxi46Random
    public static void sanxingbaoxi46Random(Game game) {
        YardsRandom(game, 1);
    }

    //四季发财 sijifacai47Random
    public static void sijifacai47Random(Game game) {
        YardsRandom(game, 1);
    }

    /**
     * 猜不出
     **/
    //猜1不出 cbc1362Random
    public static void cbc1362Random(Game game) {
        YardsRandom(game, 1);
    }

    //猜2不出 cbc2363Random
    public static void cbc2363Random(Game game) {
        YardsRandom(game, 2);
    }

    //猜3不出 cbc3364Random
    public static void cbc3364Random(Game game) {
        YardsRandom(game, 3);
    }

    //猜4不出 cbc4365Random
    public static void cbc4365Random(Game game) {
        YardsRandom(game, 4);
    }
}
